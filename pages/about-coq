<#include "incl/macros.html">
<#def TITLE>What is Coq?</#def><#include "incl/header.html">

<div class="framework">
<div class="frameworklabel">Handling proofs and programs</div>
<div class="frameworkcontent">

<p>Coq implements a program specification and mathematical higher-level language called <em>Gallina</em> that is based on an expressive formal language called the <em>Calculus of Inductive Constructions</em> that itself combines both a higher-order logic and a richly-typed functional programming language. Through a <em>vernacular</em> language of commands, Coq allows:</p>

    <ul>
      <li>to define functions or predicates, that can be evaluated efficiently;</li>
      <li>to state mathematical theorems and software specifications;</li>
      <li>to interactively develop formal proofs of these theorems;</li>
      <li>to machine-check these proofs by a relatively small certification "kernel";</li>
      <li>to extract certified programs to languages like Objective Caml, Haskell or Scheme.</li>
    </ul>

   <p>As a proof development system, Coq provides interactive proof
    methods, decision and semi-decision
    algorithms, and a <em>tactic</em> language for letting the user define its own proof methods. Connection with external computer algebra system or theorem provers is available.</p>

    <p> As a platform for the formalization of mathematics or the development of programs, Coq provides support for high-level notations, implicit contents and various other useful kinds of macros.</p>

</div>

<div class="frameworklinks">
<ul>
<li><a href="/a-short-introduction-to-coq">A short introduction to Coq</a></li>
</ul>
</div>

</div>

<div class="framework">
<div class="frameworklabel">The Coq bundle</div>
<div class="frameworkcontent">

    <p> Coq comes with libraries for efficient arithmetics in N, Z and Q,
    libraries about lists, finite sets and finite maps, libraries on
    abstract sets, relations, classical analysis, etc.</p>

    <p> Coq is released with:</p>
      <ul>

      <li>a graphical user interface based on gtk (CoqIDE) (<a
    href="/refman/practical-tools/coqide.html">see the chapter of the reference manual about CoqIDE</a>),</li>
      <li>documentation tools (<tt>coqdoc</tt> and <tt>coq-tex</tt>) and a statistics tool (<tt>coqwc</tt>),</li>
      <li>dependency and makefile generation tools for Coq
	(<tt>coq_makefile</tt> and <tt>coqdep</tt>),</li>
      <li>a stand-alone proof verifier (<tt>coqchk</tt>).</li>
      </ul>
</div>

<div class="frameworklinks">
<ul>
<li><a href="/download">Get Coq!</a></li>
</ul>
</div>

</div>

<div class="framework">
<div class="frameworklabel">Credits</div>
<div class="frameworkcontent">

    <p>Coq is the result of about 30 years of research. It started in
    1984 from an implementation of the Calculus of Constructions at
    INRIA-Rocquencourt by Thierry Coquand and Gérard Huet. In 1991,
    Christine Paulin extended it to the Calculus of Inductive
    Constructions. All in all, about fifty people contributed to the development of
    Coq features (see our <a
    href="<#CURRENTCREDITSURL>">credits</a> file, the <a
    href="/refman/credits.html">credits</a> chapter in the Coq
    Reference Manual or the synthetic <a href="/who-did-what-in-coq">who did what</a> table).</p>

    <p>The development is coordinated by the ADT Coq (Action for Technological Development), that gathers the teams involved in the implementation of the Coq Proof Assistant. The teams registered in the ADT are the <a href="http://www.inria.fr">INRIA</a> projects <a href="http://www.pps.univ-paris-diderot.fr/pi.r2/">πr²</a> and <a href="http://www-sop.inria.fr/marelle/">Marelle</a>, and the team <a href="http://cedric.cnam.fr/AfficheEquipe.php?id=7&amp;lang=fr">CPR</a> from <a href="http://www.cnam.fr">CNAM</a>.
</p>


    <p> Coq is written in the <a href="https://ocaml.org/index.fr.html">OCaml</a> language, with a bit of C. It is
    distributed under the <a href="http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html">GNU Lesser General Public Licence Version
    2.1</a> (LGPL).</p>
</div>
</div>

<#include "incl/footer.html">
